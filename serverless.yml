service: fintech-transactions

provider:
  name: aws
  stage: prod
  runtime: nodejs18.x
  architecture: arm64
  region: us-east-2
  memorySize: 2048
  logRetentionInDays: 7
  timeout: 30
  environment:
    AWS_BUCKET_NAME: fintech-transactions-bucket
    DB_HOST: ${env:DB_HOST}
    DB_USER: ${env:DB_USER}
    DB_PASS: ${env:DB_PASS}
    DB_PORT: ${env:DB_PORT}
    DB_NAME: ${env:DB_NAME}
    AWS_REGION_: ${env:AWS_REGION_}


  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::fintech-transactions-bucket"
        - "arn:aws:s3:::fintech-transactions-bucket/*"

package:
  individually: true

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  esbuild:
    plugins: esbuild-plugins.js
    keepOutputDirectory: true

    bundle: true
    minify: true
    sourcemap: true
    target: 'node18'
    platform: 'node'
    concurrency: 10
    external:
      - '@nestjs/websockets/socket-module'
      - '@nestjs/microservices/microservices-module'
      - '@nestjs/microservices'
      - 'pg-hstore'
      - '@types/node'

    packager: "npm"
    installExtraArgs: ["--no-save"]
functions:
  api:
    handler: src/lambda.handler
    events:
      - http:
          path: /{proxy+}
          method: any
