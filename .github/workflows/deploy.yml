name: ğŸš€ Deploy NestJS Lambda

on:
  push:
    branches:
      - main  # Se ejecuta solo en la rama main

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # ğŸ”‘ Permite autenticaciÃ³n con OIDC
      contents: read

    steps:
      - name: ğŸ“¥ Clonar el repositorio
        uses: actions/checkout@v3

      - name: ğŸ“„ Crear archivo .env con variables de entorno
        run: |
          echo "AWS_REGION_=${{ secrets.AWS_REGION_ }}" >> .env
          echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env

      - name: ğŸ”‘ Configurar AWS con OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::904233124762:role/NestJSLambdaDeployRole  # ğŸ”¥ Pega aquÃ­ el ARN del rol
          aws-region: us-east-2  # Cambia si usas otra regiÃ³n

      - name: ğŸ“¦ Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: ğŸ“¦ Instalar dependencias
        run: npm install

      - name: ğŸ”¨ Construir el proyecto
        run: npm run build

      - name: ğŸš€ Desplegar en AWS Lambda con Serverless
        run: npx serverless deploy
